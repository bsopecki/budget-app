{"version":3,"sources":["components/budget/FormHeader.js","components/budget/MainHeader.js","components/budget/DividedBalance.js","components/budget/GeneralBalance.js","components/budget/HistoryHeader.js","components/budget/HistoryRecord.js","components/budget/Form.js","finances.js","pages/BudgetPage.js","pages/Register.js","registerFormValidation.js","pages/Login.js","App.js","reportWebVitals.js","index.js"],"names":["FormHeader","props","Header","as","text","MainHeader","DividedBalance","Segment","textAlign","Grid","columns","divided","Row","Column","Statistic","size","color","StatisticLabel","style","StatisticValue","data","GeneralBalance","status","balance","HistoryHeader","HistoryRecord","records","onDelete","map","record","GridRow","width","description","category","amount","Icon","name","bordered","onClick","id","MainForm","onAdd","useState","setDescription","setAmount","setCategory","setStatus","cancelHandler","Form","unstackable","onSubmit","e","preventDefault","Group","Input","required","onChange","target","value","icon","label","placeholder","error","iconPosition","type","parseInt","Button","Or","finances","BudgetPage","initialRecords","setNewRecord","amounts","param","filter","reduce","a","b","mainBalance","Container","financeRecord","length","newFinanceRecord","Register","email","password","userData","setUserData","errors","setErrors","validData","setValidData","history","useHistory","useEffect","Object","keys","clearForm","push","height","verticalAlign","maxWidth","values","bool","test","validation","stacked","Message","fluid","LoginForm","loginHandler","loginData","setLoginData","accessHandler","login","App","users","setUser","loggedUser","setLoggedUser","console","log","setNewUser","newUser","setedUser","checkUser","user","userHandler","forEach","element","path","exact","component","Login","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.82c08410.chunk.js","sourcesContent":["import React from 'react'\r\nimport { Header } from 'semantic-ui-react'\r\n\r\nfunction FormHeader(props) {\r\n    return (\r\n        <Header as='h3'>{props.text}</Header>\r\n    )\r\n}\r\n\r\nexport default FormHeader\r\n","import React from 'react'\r\nimport { Header } from 'semantic-ui-react'\r\n\r\nfunction MainHeader() {\r\n    return (\r\n        <Header as=\"h1\">Welcome in your budget app!</Header>\r\n    )\r\n}\r\n\r\nexport default MainHeader\r\n","import React from 'react'\r\nimport { Grid, Segment, Statistic, StatisticLabel, StatisticValue } from 'semantic-ui-react'\r\n\r\nfunction DividedBalance(props) {\r\n    return (\r\n        <Segment textAlign=\"center\">\r\n            <Grid columns={2} divided>\r\n                <Grid.Row>\r\n                    <Grid.Column>\r\n                        <Statistic size=\"tiny\" color=\"green\">\r\n                            <StatisticLabel style={{ textAlign: \"left\" }}>\r\n                                Income:\r\n                </StatisticLabel>\r\n                            <StatisticValue>{props.data('green')}</StatisticValue>\r\n                        </Statistic>\r\n                    </Grid.Column>\r\n                    <Grid.Column>\r\n                        <Statistic size=\"tiny\" color=\"red\">\r\n                            <StatisticLabel style={{ textAlign: \"right\" }}>\r\n                                Expenses:\r\n                </StatisticLabel>\r\n                            <StatisticValue>{props.data('red')}</StatisticValue>\r\n                        </Statistic>\r\n                    </Grid.Column>\r\n                </Grid.Row>\r\n            </Grid>\r\n        </Segment>\r\n    )\r\n}\r\n\r\nexport default DividedBalance\r\n","import React from 'react'\r\nimport { Statistic, StatisticLabel, StatisticValue } from 'semantic-ui-react'\r\n\r\nfunction GeneralBalance(props) {\r\n    let status\r\n    { if (props.balance < 0) { status = 'red' } else status = 'green' }\r\n    return (\r\n        <Statistic size=\"small\" color={status}>\r\n            <StatisticLabel>Your Balance</StatisticLabel>\r\n            <StatisticValue >{props.balance}</StatisticValue>\r\n        </Statistic>\r\n    )\r\n}\r\n\r\nexport default GeneralBalance\r\n","import React from 'react'\r\nimport { Header } from 'semantic-ui-react'\r\n\r\nfunction HistoryHeader(props) {\r\n    return (\r\n        <Header as='h3'>{props.text}</Header>\r\n    )\r\n}\r\n\r\nexport default HistoryHeader\r\n","import { Segment, Grid, GridRow, Icon } from 'semantic-ui-react'\r\n\r\nconst HistoryRecord = ({ records, onDelete }) => {\r\n\r\n    return (<Segment>\r\n        {records.map(record =>\r\n            <Segment key={record.id} color={record.status} >\r\n                <Grid columns={3} textAlign=\"right\">\r\n                    <GridRow>\r\n                        <Grid.Column width={7} textAlign=\"left\">{record.description}</Grid.Column>\r\n                        <Grid.Column width={3} textAlign=\"right\">{record.category}</Grid.Column>\r\n                        <Grid.Column width={3} textAlign=\"right\">{record.amount}</Grid.Column>\r\n                        <Grid.Column width={3}>\r\n                            <Icon name=\"trash\" bordered onClick={() => onDelete(record.id)}></Icon>\r\n                        </Grid.Column>\r\n                    </GridRow>\r\n                </Grid>\r\n            </Segment >\r\n        )\r\n        }\r\n    </Segment>\r\n    )\r\n\r\n}\r\nexport default HistoryRecord\r\n","import { Form, Button } from 'semantic-ui-react'\r\nimport { useState } from 'react'\r\n\r\n\r\nfunction MainForm({ onAdd }) {\r\n    const [description, setDescription] = useState('')\r\n    const [amount, setAmount] = useState('')\r\n    const [category, setCategory] = useState('')\r\n    const [status, setStatus] = useState('')\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault()\r\n        onAdd({ amount, category, description, status })\r\n        cancelHandler()\r\n    }\r\n    const cancelHandler = () => {\r\n        setDescription('')\r\n        setAmount('')\r\n        setCategory('')\r\n        setStatus('')\r\n    }\r\n    return (\r\n        <Form unstackable onSubmit={onSubmit}>\r\n            <Form.Group>\r\n                <Form.Input\r\n                    required\r\n                    onChange={(e) => { setDescription(e.target.value) }}\r\n                    icon='tags'\r\n                    width={10}\r\n                    label='description'\r\n                    value={description} placeholder=\"New shiny things\"\r\n                    error={'Please enter the name of item'}>\r\n                </Form.Input>\r\n                <Form.Input\r\n                    required\r\n                    onChange={(e) => { setCategory(e.target.value) }}\r\n                    icon='info'\r\n                    iconPosition='left'\r\n                    width={3}\r\n                    label='value'\r\n                    value={category}\r\n                    placeholder=\"for\"\r\n                    error={'Please enter category'}></Form.Input>\r\n                <Form.Input\r\n                    type='number'\r\n                    required\r\n                    onChange={(e) => { setAmount(parseInt(e.target.value)) }}\r\n                    icon='dollar'\r\n                    iconPosition='left'\r\n                    width={3}\r\n                    label='value'\r\n                    value={amount}\r\n                    placeholder=\"100\"\r\n                    error={'Please enter amount'}\r\n                ></Form.Input>\r\n            </Form.Group>\r\n            <select value={status} required onChange={(e) => { setStatus(e.target.value) }}>\r\n                <option value=\"\">Type of operation</option>\r\n                <option value='green'>Income</option>\r\n                <option value='red'>Expense</option>\r\n            </select>\r\n            <Button.Group>\r\n                <Button color='red' onClick={cancelHandler}>Canel</Button>\r\n                <Button.Or />\r\n                <Button color='green'>Ok</Button>\r\n            </Button.Group>\r\n        </Form>\r\n    )\r\n}\r\n\r\nexport default MainForm\r\n","export const finances = [{\r\n    id: 1,\r\n    amount: 25,\r\n    category: 'bills',\r\n    description: 'cell phone',\r\n    status: 'red'\r\n},\r\n{\r\n    id: 2,\r\n    amount: 1750,\r\n    category: 'payouts',\r\n    description: 'job salary',\r\n    status: 'green'\r\n},\r\n{\r\n    id: 3,\r\n    amount: 250,\r\n    category: 'bills',\r\n    description: 'rent',\r\n    status: 'red'\r\n},\r\n{\r\n    id: 4,\r\n    amount: 188,\r\n    category: 'extra incomes',\r\n    description: 'lottery',\r\n    status: 'green'\r\n},\r\n{\r\n    id: 5,\r\n    amount: 149,\r\n    category: 'bills',\r\n    description: 'car insurance',\r\n    status: 'red'\r\n},\r\n{\r\n    id: 6,\r\n    amount: 95,\r\n    category: 'bills',\r\n    description: 'loan installment',\r\n    status: 'red'\r\n},\r\n{\r\n    id: 7,\r\n    amount: 75,\r\n    category: 'extra incomes',\r\n    description: 'maintenance',\r\n    status: 'green'\r\n},\r\n{\r\n    id: 8,\r\n    amount: 40,\r\n    category: 'clothes expenses',\r\n    description: 'new shoes',\r\n    status: 'red'\r\n},\r\n{\r\n    id: 9,\r\n    amount: 37,\r\n    category: 'bills',\r\n    description: 'electricity',\r\n    status: 'red'\r\n}]","import FormHeader from '../components/budget/FormHeader'\r\nimport MainHeader from '../components/budget/MainHeader'\r\nimport DividedBalance from '../components/budget/DividedBalance'\r\nimport GeneralBalance from '../components/budget/GeneralBalance'\r\nimport HistoryHeader from '../components/budget/HistoryHeader'\r\nimport HistoryRecord from '../components/budget/HistoryRecord'\r\nimport MainForm from '../components/budget/Form'\r\nimport { Container } from 'semantic-ui-react'\r\nimport { useState } from 'react'\r\n\r\nimport { finances } from '../finances'\r\n\r\nconst BudgetPage = () => {\r\n    const initialRecords = finances\r\n    const [records, setNewRecord] = useState(initialRecords)\r\n    const amounts = (param) => records.filter(({ status }) => status === param).map(({ amount }) => amount).reduce((a, b) => a + b)\r\n    const mainBalance = amounts('green') - amounts('red')\r\n\r\n    //Add record\r\n    const addFinanceRecord = (financeRecord) => {\r\n        const id = records.length + 1;\r\n        const newFinanceRecord = { id, ...financeRecord }\r\n        setNewRecord([...records, newFinanceRecord])\r\n    }\r\n    //Delete record\r\n    const deleteRecord = (id) => {\r\n        setNewRecord(records.filter((record) => record.id !== id))\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n            <MainHeader />\r\n            <GeneralBalance balance={mainBalance} />\r\n            <DividedBalance data={amounts} />\r\n            <HistoryHeader text='History' />\r\n            <HistoryRecord records={records} onDelete={deleteRecord} />\r\n            <FormHeader text='Add new transaction'></FormHeader>\r\n            <MainForm onAdd={addFinanceRecord} />\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default BudgetPage\r\n","import React, { useState, useEffect } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { Button, Form, Grid, Header, Segment, Message } from 'semantic-ui-react'\r\nimport { validation } from '../registerFormValidation'\r\n\r\nconst Register = ({ onAdd }) => {\r\n\r\n    const [userData, setUserData] = useState({\r\n        name: '',\r\n        email: '',\r\n        password: '',\r\n    })\r\n\r\n    const [errors, setErrors] = useState({})\r\n    const [validData, setValidData] = useState(false)\r\n\r\n    let history = useHistory()\r\n\r\n\r\n    const registerMemberHandler = (e) => {\r\n        e.preventDefault()\r\n        setErrors(validation(userData))\r\n        setValidData(true)\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (Object.keys(errors).length === 0 && validData) {\r\n            clearForm()\r\n            onAdd({ name: userData.name, email: userData.email, password: userData.password })\r\n            history.push('/login')\r\n        }\r\n    }, [errors, userData, history, onAdd, validData])\r\n\r\n\r\n\r\n\r\n    const clearForm = () => {\r\n        setUserData({\r\n            name: '',\r\n            email: '',\r\n            password: '',\r\n        })\r\n    }\r\n\r\n    return (\r\n        <Grid textAlign='center' style={{ height: '100vh' }} verticalAlign='middle'>\r\n            <Grid.Column style={{ maxWidth: 450 }}>\r\n                <Header as='h2' color='teal' textAlign='center'>\r\n                    Create account\r\n            </Header>\r\n                <Form size='large' onSubmit={registerMemberHandler}>\r\n                    <Segment stacked>\r\n                        <Message>\r\n                            {!errors.name ? '' : errors.name}\r\n                            <Form.Input\r\n                                fluid\r\n                                placeholder='Name'\r\n                                type='text'\r\n                                value={userData.name}\r\n                                onChange={(e) => setUserData({ ...userData, name: e.target.value })}\r\n                                error={errors.bool}\r\n                            />\r\n                        </Message>\r\n                        <Message>\r\n                            {!errors.email ? '' : errors.email}\r\n                            <Form.Input\r\n                                fluid\r\n                                placeholder='Email'\r\n                                type='text'\r\n                                value={userData.email}\r\n                                onChange={(e) => setUserData({ ...userData, email: e.target.value })}\r\n                                error={errors.bool}\r\n                            />\r\n                        </Message>\r\n                        <Message>\r\n                            {!errors.password ? '' : errors.password}\r\n                            <Form.Input\r\n                                fluid\r\n                                placeholder='Password'\r\n                                type='password'\r\n                                value={userData.password}\r\n                                onChange={(e) => setUserData({ ...userData, password: e.target.value })}\r\n                                error={errors.bool}\r\n                            />\r\n                        </Message>\r\n                        <Button color='teal' fluid size='large'>\r\n                            Create account\r\n                        </Button>\r\n                    </Segment>\r\n                </Form>\r\n            </Grid.Column>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default Register\r\n","export const validation = (values) => {\r\n    let errors = {}\r\n\r\n    if (!values.name) {\r\n        errors.bool = true;\r\n        errors.name = 'Name is required'\r\n    }\r\n\r\n    if (!values.email) {\r\n        errors.bool = true;\r\n        errors.email = 'Email is required'\r\n    } else if (!/\\S+@\\S+\\.\\S+/.test(values.email)) {\r\n        errors.bool = true;\r\n        errors.email = 'Email is invalid'\r\n    }\r\n\r\n    if (!values.password) {\r\n        errors.bool = true;\r\n        errors.password = 'Password is required'\r\n    }\r\n\r\n    return errors\r\n}","import React, { useState } from 'react'\r\nimport { Button, Form, Grid, Header, Segment } from 'semantic-ui-react'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nconst LoginForm = ({ loginHandler }) => {\r\n    const [loginData, setLoginData] = useState({\r\n        email: '',\r\n        password: ''\r\n    })\r\n    let history = useHistory()\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault()\r\n        loginHandler({ ...loginData, login: loginData.login, password: loginData.password })\r\n        accessHandler()\r\n    }\r\n\r\n    const accessHandler = () => {\r\n        history.push('/budget')\r\n    }\r\n\r\n    return (\r\n        <Grid textAlign='center' style={{ height: '100vh' }} verticalAlign='middle'>\r\n            <Grid.Column style={{ maxWidth: 450 }}>\r\n                <Header as='h2' color='teal' textAlign='center'>\r\n                    Log-in to your account\r\n            </Header>\r\n                <Form size='large' onSubmit={onSubmit}>\r\n                    <Segment stacked>\r\n                        <Form.Input\r\n                            fluid icon='user'\r\n                            iconPosition='left'\r\n                            placeholder='E-mail address'\r\n                            type='text'\r\n                            value={loginData.email}\r\n                            onChange={(e) => setLoginData({ ...loginData, email: e.target.value })}\r\n                        />\r\n                        <Form.Input\r\n                            fluid\r\n                            icon='lock'\r\n                            iconPosition='left'\r\n                            placeholder='Password'\r\n                            type='password'\r\n                            value={loginData.password}\r\n                            onChange={(e) => setLoginData({ ...loginData, password: e.target.value })}\r\n                        />\r\n                        <Button color='teal' fluid size='large'>\r\n                            Login\r\n                    </Button>\r\n                    </Segment>\r\n                </Form>\r\n            </Grid.Column>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default LoginForm","import { useState } from 'react'\nimport BudgetPage from './pages/BudgetPage'\nimport Register from './pages/Register'\nimport Login from './pages/Login'\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom'\n\n\nconst App = () => {\n  const [users, setUser] = useState([])\n  const [loggedUser, setLoggedUser] = useState(users)\n  console.log(users)\n\n  const setNewUser = (newUser) => {\n    const setedUser = { ...newUser }\n    setUser([...users, setedUser])\n    console.log(setedUser)\n  }\n\n  const checkUser = (user) => {\n    const userHandler = { ...user }\n    setLoggedUser({ ...loggedUser, userHandler })\n    users.forEach(element => {\n      if (element.email === user.login && element.password === user.password) {\n        console.log('ok')\n      }\n    });\n  }\n\n  return (\n    <div>\n      <Router>\n        <Switch>\n          <Route path='/' exact component={() => <Register onAdd={setNewUser} />} />\n          <Route path='/budget' component={() => <BudgetPage />} />\n          <Route path='/login' component={() => <Login loginHandler={checkUser} />} />\n        </Switch>\n      </Router>\n    </div>\n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'semantic-ui-css/semantic.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}